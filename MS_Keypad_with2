
#include <Password.h> //http://playground.arduino.cc/uploads/Code/Password.zip //tells to use password library
#include <Keypad.h> //http://www.arduino.cc/playground/uploads/Code/Keypad.zip  //tells to use keypad library

Password password = Password( "7653" ); //password to unlock, can be changed
Password password1 = Password( "1459" );
const byte ROWS = 4; // Four rows
const byte COLS = 3; // columns
// Define the Keymap
char keys[ROWS][COLS] = {
{'1','2','3'},
{'4','5','6'},
{'7','8','9'},
{'*','0','#'}
};
// Connect keypad ROW0, ROW1, ROW2 and ROW3 to these Arduino pins.
byte rowPins[ROWS] = { 9, 8, 7, 6 };// Connect keypad COL0, COL1 and COL2 to these Arduino pins.
byte colPins[COLS] = { 5, 4, 3 };


// Create the Keypad
Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

int valA4;

boolean activated = false;

void setup(){
  Serial.begin(9600);
  Serial.write(254);
  Serial.write(0x01);
  delay(200); 
  pinMode(11, OUTPUT);  //green light
  pinMode(A5, OUTPUT);  // Goes to A12
  pinMode(13, OUTPUT);
  pinMode(10, OUTPUT);
  
  pinMode(A0, OUTPUT);
  pinMode(A4, OUTPUT); //Goes to A13 on MEGA

  pinMode(12, INPUT);
  
  
  keypad.addEventListener(keypadEvent); //add an event listener for this keypad
  }

void loop(){ 
     Serial.print("A4: ");             //Wrong Password
     Serial.println(digitalRead(A4));  //Wrong Password
     Serial.print("A5: ");             //Correct Password
     Serial.println(digitalRead(A5));  //Correct Password
     Serial.print("12: ");
     Serial.println(digitalRead(12));
  
  if(digitalRead(12) == HIGH){
    activated = true;
  }
  else 
  {
    activated = false;
  }

  keypad.getKey();
  
  }
  
  //take care of some special events
  void keypadEvent(KeypadEvent eKey){ 
  switch (keypad.getState()){
  case PRESSED:
  
  Serial.print("Enter:");
  Serial.println(eKey);
  delay(10);
  
  Serial.write(254);
  
  switch (eKey){
    case '*': 
    checkPassword(); delay(1);
    checkPassword1(); delay(1); 
    break;
    
    case '#': 
    password.reset(); delay(1); 
    password1.reset(); delay(1); 
    break;
    
     default: 
     password.append(eKey); delay(1);
     password1.append(eKey); delay(1);
}
}
}
void checkPassword(){
  Serial.println("h");
  Serial.println(activated);
  if(activated){  
    if (password.evaluate()){  //if password is right open
        Serial.println("Accepted");
        Serial.write(254);
        delay(10);
        digitalWrite(A5, HIGH);  //Correct Password ON
        delay(1000);
        digitalWrite(A5, LOW);   //Correct Password OFF
        digitalWrite(10, HIGH);
        digitalWrite(11, HIGH);
        digitalWrite(12, HIGH);
        }
        else 
        {
        Serial.println("Denied"); //if passwords wrong keep locked
        Serial.write(254);
        delay(10);
        digitalWrite(A4, HIGH);   //Wrong Password
        delay(1000);
        digitalWrite(A4, LOW);    //Wrong Password
        }
       }
      }

void checkPassword1(){
  Serial.println("h");
  Serial.println(activated);
  if(activated){  
    if (password.evaluate()){  //if password is right open
        Serial.println("Accepted");
        Serial.write(254);
        delay(10);
        digitalWrite(A5, HIGH);  //Correct Password ON
        delay(1000);
        digitalWrite(A5, LOW);   //Correct Password OFF
        digitalWrite(10, HIGH);
        digitalWrite(11, HIGH);
        digitalWrite(12, HIGH);
        }
        else 
        {
        Serial.println("Denied"); //if passwords wrong keep locked
        Serial.write(254);
        delay(10);
        digitalWrite(A4, HIGH);   //Wrong Password
        delay(1000);
        digitalWrite(A4, LOW);    //Wrong Password
        }
       }
      }
